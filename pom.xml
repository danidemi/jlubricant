<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.danidemi.jlubricant</groupId>
	<artifactId>jlubricant</artifactId>
	<version>0.0.15-SNAPSHOT</version>

	<name>jlubricant</name>
	<description>Java Power Ups!</description>

	<packaging>pom</packaging>
	<url>https://github.com/danidemi/jlubricant/wiki</url>

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>9</version>
	</parent>

	<modules>
		<module>jlubricant-spring-batch</module>
		<module>jlubricant-test</module>
		<module>jlubricant-embeddable</module>
		<module>jlubricant-embeddable-hsql</module>
		<module>jlubricant-embeddable-h2</module>
		<module>jlubricant-embeddable-ffmq</module>
		<module>jlubricant-utils</module>
		<module>jlubricant-internal-contracts</module>
		<module>jlubricant-logback</module>
		<module>jlubricant-slf4j</module>
		<module>jlubricant-spring-context</module>
	</modules>

	<properties>
		
		<spring.version>4.0.6.RELEASE</spring.version>
		<powermock.version>1.5.5</powermock.version>
		
		<plugin.maven-source-plugin.version>2.2.1</plugin.maven-source-plugin.version>
		<plugin.maven-javadoc-plugin.version>2.9.1</plugin.maven-javadoc-plugin.version>
		<plugin.maven-gpg-plugin.version>1.4</plugin.maven-gpg-plugin.version>
		<plugin.maven-release-plugin.version>2.5</plugin.maven-release-plugin.version>
		<plugin.maven-install-plugin.version>2.5.1</plugin.maven-install-plugin.version>
	</properties>

	<licenses>
		<license>
			<name>The MIT License (MIT)</name>
			<url>http://danidemi.mit-license.org/</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:git@github.com:danidemi/jlubricant.git</connection>
		<developerConnection>scm:git:git@github.com:danidemi/jlubricant.git</developerConnection>
		<url>git@github.com:danidemi/jlubricant.git</url>
		<tag>HEAD</tag>
	</scm>

	<developers>
		<developer>
			<name>Daniele Demichelis</name>
			<organization>Studio Ingegneria DaniDemi</organization>
			<organizationUrl>http://www.danidemi.com</organizationUrl>
			<email>demichelis@danidemi.com</email>
			<timezone>2</timezone>
			<id>danidemi</id>
		</developer>
	</developers>

	<dependencyManagement>

		<dependencies>

			<!-- =============================================== -->
			<!-- JLubricant -->
			<!-- =============================================== -->
			<dependency>
				<groupId>com.danidemi.jlubricant</groupId>
				<artifactId>jlubricant-embeddable</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.danidemi.jlubricant</groupId>
				<artifactId>jlubricant-embeddable-h2</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.danidemi.jlubricant</groupId>
				<artifactId>jlubricant-embeddable-hsql</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.danidemi.jlubricant</groupId>
				<artifactId>jlubricant-internal-contracts</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.danidemi.jlubricant</groupId>
				<artifactId>jlubricant-logback</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.danidemi.jlubricant</groupId>
				<artifactId>jlubricant-slf4j</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.danidemi.jlubricant</groupId>
				<artifactId>jlubricant-spring-batch</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.danidemi.jlubricant</groupId>
				<artifactId>jlubricant-spring-context</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.danidemi.jlubricant</groupId>
				<artifactId>jlubricant-test</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.danidemi.jlubricant</groupId>
				<artifactId>jlubricant-utils</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!-- =============================================== -->
			<!-- JLubricant -->
			<!-- =============================================== -->

			<!-- =============================================== -->
			<!-- Utils -->
			<!-- =============================================== -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>4.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.3.2</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>
			<!-- =============================================== -->
			<!-- Utils -->
			<!-- =============================================== -->

			<!-- =============================================== -->
			<!-- Logging -->
			<!-- =============================================== -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.7.7</version>
			</dependency>
			<dependency>
				<!-- logback is 'provided' because it will be responsibility of the project 
					that will use JLubricant to choose the underlying logging library -->
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.1.2</version>
				<scope>provided</scope>
			</dependency>
			<!-- =============================================== -->
			<!-- Logging -->
			<!-- =============================================== -->


			<!-- =============================================== -->
			<!-- TEST -->
			<!-- =============================================== -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>1.9.5</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-core</artifactId>
				<version>1.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-integration</artifactId>
				<version>1.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>
		   <dependency>
		      <groupId>org.powermock</groupId>
		      <artifactId>powermock-api-mockito</artifactId>
		      <version>${powermock.version}</version>
		      <scope>test</scope>
		   </dependency>
			<dependency>
				<groupId>org.jdbi</groupId>
				<artifactId>jdbi</artifactId>
				<version>2.55</version>
				<scope>test</scope>
			</dependency>
			<!-- =============================================== -->
			<!-- TEST -->
			<!-- =============================================== -->

			<!-- ======================================== -->
			<!-- Spring Framework -->
			<!-- ======================================== -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- ======================================== -->
			<!-- Spring Framework -->
			<!-- ======================================== -->

			<!-- ======================================== -->
			<!-- Dbcp -->
			<!-- ======================================== -->			
			<dependency>
			    <groupId>commons-dbcp</groupId>
			    <artifactId>commons-dbcp</artifactId>
			    <version>1.4</version>
			</dependency>			
			<!-- ======================================== -->
			<!-- Dbcp -->
			<!-- ======================================== -->

			<!-- ======================================== -->
			<!-- FFMQ                                     -->
			<!-- ======================================== -->
			<dependency>
				<groupId>net.timewalker.ffmq</groupId>
				<artifactId>ffmq3-core</artifactId>
				<version>3.0.7</version>
				<exclusions>
					<exclusion>
						<!-- This is excluded because ffmq3 depend explicitly on jms, but that 
							jar does not exists on maven repos. -->
						<groupId>javax.jms</groupId>
						<artifactId>jms</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>net.timewalker.ffmq</groupId>
				<artifactId>ffmq3-server</artifactId>
				<version>3.0.7</version>
				<exclusions>
					<exclusion>
						<!-- This is excluded because ffmq3 depend explicitly on jms, but that 
							jar doe not exists. -->
						<groupId>javax.jms</groupId>
						<artifactId>jms</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<!-- This is the JMS 1.1 API -->
				<groupId>javax.jms</groupId>
				<artifactId>jms-api</artifactId>
				<version>1.1-rev-1</version>
			</dependency>			
			<!-- ======================================== -->
			<!-- FFMQ                                     -->
			<!-- ======================================== -->				

		</dependencies>

	</dependencyManagement>

	<!-- Distribution management acts precisely as it sounds: it manages the 
		distribution of the artifact and supporting files generated throughout the 
		build process. distributionManagement specifies where (and how) this project 
		will get to a remote repository when it is deployed. The repository elements 
		will be used for snapshot distribution if the snapshotRepository is not defined -->
	<distributionManagement>

		<site>
			<id>nexus-site</id>
			<url>file:///tmp/</url>
		</site>
	  
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	

	<build>
	
		<plugins>

			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<!-- <version>1.6.5</version> --> <!-- version commented out to always use the latest version -->
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>

			<!-- Install plugin configured like this allow to install only after all 
				the tests passed -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>${plugin.maven-install-plugin.version}</version>
				<configuration>
					<installAtEnd>true</installAtEnd>
				</configuration>
			</plugin>

			<!-- Deploy plugin configured like this allow to deploy only after all 
				the tests passed -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<deployAtEnd>true</deployAtEnd>
				</configuration>
			</plugin>

			<!-- This plugin is used to release a project with Maven, saving a lot 
				of repetitive, manual work. Releasing a project is made in two steps: prepare 
				and perform. -->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<!--  
				<version>${plugin.maven-release-plugin.version}</version>
				-->
				<configuration>
					<mavenExecutorId>forked-path</mavenExecutorId>
					<!-- <mavenExecutorId>invoker</mavenExecutorId> -->
					<useReleaseProfile>false</useReleaseProfile>
					<arguments>-Psonatype-oss-release</arguments>
				</configuration>
			</plugin>





			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${plugin.maven-source-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${plugin.maven-javadoc-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!--  
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>${plugin.maven-gpg-plugin.version}</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			-->
			

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<!-- This plugin is used to release a project with Maven, saving a lot 
				of repetitive, manual work. Releasing a project is made in two steps: prepare 
				and perform. Note: Maven 3 users are encouraged to use at least Maven-3.0.4 
				due to some settings related issues. http://maven.apache.org/maven-release/maven-release-plugin/ -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-release-plugin</artifactId> 
				<version>2.0-beta-9</version> </plugin> -->




			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.4</version>
			</plugin>
			
			<!--  
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.7</version>
			</plugin>			
			-->
					
		</plugins>

	</build>
	
	<reporting>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.7</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>dependencies</report>
							<report>project-team</report>
							<!--  
							<report>mailing-list</report>
							<report>cim</report>
							<report>issue-tracking</report>
							-->
							<report>scm</report>
							<report>license</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.18</version>
				<configuration>
					<showSuccess>true</showSuccess>
				</configuration>
			</plugin>

		</plugins>
  
	</reporting>


	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${plugin.maven-javadoc-plugin.version}</version>

						<executions>
							<execution>
								<id>attach-javadocs</id>
								<phase>verify</phase>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>

					</plugin>


					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${plugin.maven-gpg-plugin.version}</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<!-- <profiles> <profile> <id>release-sign-artifacts</id> <activation> <property> 
		<name>performRelease</name> <value>true</value> </property> </activation> 
		<build> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-gpg-plugin</artifactId> 
		<version>1.1</version> <executions> <execution> <id>sign-artifacts</id> <phase>verify</phase> 
		<goals> <goal>sign</goal> </goals> </execution> </executions> </plugin> </plugins> 
		</build> </profile> </profiles> -->

</project>
